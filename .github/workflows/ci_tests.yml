name: CI Test
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CI: true
  node: 16.x

jobs:
  test:
    name: test
    runs-on: ubuntu-latest
    services:
        postgres:
          image: postgres:12
          env:
            POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          ports:
            - 5432:5432
          options: --health-cmd=pg_isready --health-interval=10s --health-timeout=5s --health-retries=5
        mysql:
          image: bitnami/mysql:8.0
          env:
            MYSQL_USER: ${{ secrets.MYSQL_USER }}
            ALLOW_EMPTY_PASSWORD: yes
            MYSQL_AUTHENTICATION_PLUGIN: mysql_native_password
          ports:
            - 3306:3306
          options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=20s --health-retries=10
    strategy:
        matrix:
          db: [postgres, mysql]
    steps:
      - uses: actions/checkout@v2
      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 7.0.0
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Create dotenv test file
        env:
          DATABASE_TYPE: ${{ matrix.db }}

          MYSQL_NAME: ${{ secrets.MYSQL_NAME }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}

          POSTGRES_NAME: ${{ secrets.POSTGRES_NAME }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}


        run: |
          touch .env.test
          echo DATABASE_TYPE="$DATABASE_TYPE"
          
          echo MYSQL_NAME="$MYSQL_NAME" >> .env.test
          echo MYSQL_USER="$MYSQL_USER" >> .env.test
          echo MYSQL_PASSWORD="" >> .env.test


          echo POSTGRES_NAME="$POSTGRES_NAME" >> .env.test
          echo POSTGRES_USER="$POSTGRES_USER" >> .env.test
          echo POSTGRES_PASSWORD="$POSTGRES_PASSWORD" >> .env.test
          cat .env.test
      - name: Install dependencies
        run: pnpm install
      - name: Run tests
        env:
          CI_POSTGRES_PORT: ${{ job.services.postgres.ports['5432'] }}
          CI_MYSQL_PORT: ${{ job.services.postgres.ports['3306'] }}
        run: pnpx nx run-many --all --target=test
